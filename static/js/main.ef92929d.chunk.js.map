{"version":3,"sources":["components/ColorPicker.js","components/NavBar.js","components/TextForm.js","mr-bean.gif","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["ColorPicker","props","paintColor","event","applyColor","target","value","document","body","style","backgroundColor","className","role","type","name","id","onChange","onClick","NavBar","mode","href","title","homeText","tabIndex","setMode","htmlFor","placeholder","TextForm","fileReader","useState","text","setText","setClipboard","selectedFile","setselectedFile","handleFileRead","result","showAlert","heading","rows","console","log","newText","toUpperCase","toLowerCase","files","FileReader","onloadend","readAsText","count","split","forEach","s","arr","filter","t","length","calculateWords","defaultProps","Alert","alert","msg","App","setAlert","color","setColor","message","setTimeout","colorName","src","mrBean","alt","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef92929d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ColorPicker(props) {\r\n  const paintColor = (event) => {\r\n    props.applyColor(event.target.value);\r\n    document.body.style.backgroundColor = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"btn-group hidden\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n        <input type=\"color\" name=\"btnradio\" id=\"btnradio1\" value={`#003366`} onChange={paintColor} onClick={paintColor} />\r\n        <input type=\"color\" name=\"btnradio\" id=\"btnradio1\" value={`#3d1010`} onChange={paintColor} onClick={paintColor} />\r\n        <input type=\"color\" name=\"btnradio\" id=\"btnradio1\" value={`#1a3300`} onChange={paintColor} onClick={paintColor} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    // Use with react router\r\n    // <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    //   <div className=\"container-fluid\">\r\n    //     <Link className=\"navbar-brand\" to=\"/\">\r\n    //       {props.title}\r\n    //     </Link>\r\n    //     <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    //       <span className=\"navbar-toggler-icon\"></span>\r\n    //     </button>\r\n    //     <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    //       <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n    //         <li className=\"nav-item\">\r\n    //           <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n    //             {props.homeText}\r\n    //           </Link>\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           <Link className=\"nav-link\" to=\"/about\">\r\n    //             About\r\n    //           </Link>\r\n    //         </li>\r\n    //         <li className=\"nav-item dropdown\">\r\n    //           <Link className=\"nav-link dropdown-toggle\" to=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    //             Dropdown\r\n    //           </Link>\r\n    //           <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n    //             <li>\r\n    //               <Link className=\"dropdown-item\" to=\"/\">\r\n    //                 Action\r\n    //               </Link>\r\n    //             </li>\r\n    //             <li>\r\n    //               <Link className=\"dropdown-item\" to=\"/\">\r\n    //                 Another action\r\n    //               </Link>\r\n    //             </li>\r\n    //             <li>\r\n    //               <hr className=\"dropdown-divider\" />\r\n    //             </li>\r\n    //             <li>\r\n    //               <Link className=\"dropdown-item\" to=\"/\">\r\n    //                 Something else here\r\n    //               </Link>\r\n    //             </li>\r\n    //           </ul>\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           <Link className=\"nav-link disabled\" to=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">\r\n    //             Disabled\r\n    //           </Link>\r\n    //         </li>\r\n    //         <li className=\"nav-item mx-3 my-2\">\r\n    //           <div className=\"form-check form-switch\">\r\n    //             <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.setMode} />\r\n    //             <label className={`form-check-label text-${props.mode === \"light\" ? \"black\" : \"white\"}`} htmlFor=\"flexSwitchCheckDefault\">\r\n    //               Enable Dark mode\r\n    //             </label>\r\n    //           </div>\r\n    //         </li>\r\n    //         <li className=\"nav-item mx-3 my-2\">{props.mode === \"dark\" && <ColorPicker applyColor={props.applyColor} />}</li>\r\n    //       </ul>\r\n    //       <form className=\"d-flex\">\r\n    //         <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n    //         <button className=\"btn btn-outline-success\" type=\"submit\">\r\n    //           Search\r\n    //         </button>\r\n    //       </form>\r\n    //     </div>\r\n    //   </div>\r\n    // </nav>\r\n\r\n    // Original code\r\n    // <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    //   <div className=\"container-fluid\">\r\n    //     <a className=\"navbar-brand\" href=\"/\">\r\n    //       {props.title}\r\n    //     </a>\r\n    //     <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    //       <span className=\"navbar-toggler-icon\"></span>\r\n    //     </button>\r\n    //     <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    //       <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n    //         <li className=\"nav-item\">\r\n    //           <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n    //             {props.homeText}\r\n    //           </a>\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           <a className=\"nav-link\" href=\"/about\">\r\n    //             About\r\n    //           </a>\r\n    //         </li>\r\n    //         <li className=\"nav-item dropdown\">\r\n    //           <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    //             Dropdown\r\n    //           </a>\r\n    //           <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n    //             <li>\r\n    //               <a className=\"dropdown-item\" href=\"/\">\r\n    //                 Action\r\n    //               </a>\r\n    //             </li>\r\n    //             <li>\r\n    //               <a className=\"dropdown-item\" href=\"/\">\r\n    //                 Another action\r\n    //               </a>\r\n    //             </li>\r\n    //             <li>\r\n    //               <hr className=\"dropdown-divider\" />\r\n    //             </li>\r\n    //             <li>\r\n    //               <a className=\"dropdown-item\" href=\"/\">\r\n    //                 Something else here\r\n    //               </a>\r\n    //             </li>\r\n    //           </ul>\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">\r\n    //             Disabled\r\n    //           </a>\r\n    //         </li>\r\n    //         <li className=\"nav-item mx-3 my-2\">\r\n    //           <div className=\"form-check form-switch\">\r\n    //             <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.setMode} />\r\n    //             <label className={`form-check-label text-${props.mode === \"light\" ? \"black\" : \"white\"}`} htmlFor=\"flexSwitchCheckDefault\">\r\n    //               Enable Dark mode\r\n    //             </label>\r\n    //           </div>\r\n    //         </li>\r\n    //         <li className=\"nav-item mx-3 my-2\">{props.mode === \"dark\" && <ColorPicker applyColor={props.applyColor} />}</li>\r\n    //       </ul>\r\n    //       <form className=\"d-flex\">\r\n    //         <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n    //         <button className=\"btn btn-outline-success\" type=\"submit\">\r\n    //           Search\r\n    //         </button>\r\n    //       </form>\r\n    //     </div>\r\n    //   </div>\r\n    // </nav>\r\n\r\n    //Changes to host app on Github\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"\">\r\n          {props.title}\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"\">\r\n                {props.homeText}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <hr className=\"dropdown-divider\" />\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"\" tabIndex=\"-1\" aria-disabled=\"true\">\r\n                Disabled\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item mx-3 my-2\">\r\n              <div className=\"form-check form-switch\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.setMode} />\r\n                <label className={`form-check-label text-${props.mode === \"light\" ? \"black\" : \"white\"}`} htmlFor=\"flexSwitchCheckDefault\">\r\n                  Enable Dark mode\r\n                </label>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item mx-3 my-2\">{props.mode === \"dark\" && <ColorPicker applyColor={props.applyColor} />}</li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  homeText: PropTypes.string.isRequired,\r\n};\r\n\r\n//set default property values\r\nNavBar.defaultProps = {\r\n  title: \"set title here\",\r\n  homeText: \"set hoem text\",\r\n};\r\n","import React, { useState } from \"react\";\r\n//useState is a hook\r\n\r\nexport default function TextForm(props) {\r\n  //Declare & define state variable\r\n  const [text, setText] = useState(\"\");\r\n  const [clipboard, setClipboard] = useState(\"\");\r\n  const [selectedFile, setselectedFile] = useState(null);\r\n\r\n  let fileReader;\r\n  // this is not allowed\r\n  //text=\"new value\"\r\n\r\n  const handleUpClick = () => {\r\n    console.log(\"Clicked on handleUpClick\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text converted to Uppercase\", \"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    console.log(\"Clicked on handleLoClick\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text converted to Lowercase\", \"success\");\r\n  };\r\n\r\n  const handleClearText = () => {\r\n    console.log(\"Clicked on handleClearText\");\r\n    setText(\"\");\r\n    props.showAlert(\"Text cleared\", \"success\");\r\n  };\r\n\r\n  const handleCopyText = () => {\r\n    console.log(\"Clicked on handleCopyText\" + text);\r\n    setClipboard(text);\r\n    props.showAlert(\"Text copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const handleOnFileChange = (event) => {\r\n    setselectedFile(event.target.files[0]);\r\n    props.showAlert(\"File '\" + event.target.files[0].name + \"' is selected. Please click 'Upload' to load the file in text editor.\", \"success\");\r\n  };\r\n\r\n  const handleFileRead = (event) => {\r\n    setText(fileReader.result);\r\n    props.showAlert(\"File content loaded in text editor.\", \"success\");\r\n  };\r\n\r\n  const handleUploadFile = () => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = handleFileRead;\r\n    fileReader.readAsText(selectedFile);\r\n  };\r\n\r\n  const calculateWords = () => {\r\n    let temp = text,\r\n      count = 0;\r\n    temp.split(\"\\n\").forEach((s) => {\r\n      let arr = s.split(\" \").filter((t) => t.length > 0);\r\n      count = count + arr.length;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"Clicked on handleOnChange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={`text-${props.mode === \"light\" ? \"black\" : \"white\"}`}> {props.heading} </h1>\r\n      <div className=\"mb-3\">\r\n        <textarea value={text} className=\"form-control\" id=\"textbox\" rows=\"8\" onChange={handleOnChange}></textarea>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button className=\"btn btn-primary mx-2\" type=\"button\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" type=\"button\" onClick={handleLoClick}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" type=\"button\" onClick={handleClearText}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" type=\"button\" onClick={handleCopyText}>\r\n          Copy\r\n        </button>\r\n      </div>\r\n      <div className=\"input-group mb-3 my-3 mx-2\">\r\n        <input type=\"file\" className=\"form-control\" placeholder=\"\" aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\" onChange={handleOnFileChange} />\r\n        <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon1\" onClick={handleUploadFile}>\r\n          Upload\r\n        </button>\r\n      </div>\r\n      <div className={`my-3 mx-2 text-${props.mode === \"light\" ? \"black\" : \"white\"}`}>\r\n        <h1> Your text summary </h1>\r\n        <p>\r\n          {calculateWords()}- words and {text.length}- characters\r\n        </p>\r\n        <p>\r\n          Approx {text.split(\" \").length * 0.008}\r\n          minutes to read\r\n        </p>\r\n        <h2> Preview </h2> <p> {text} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mr-bean.067bc792.gif\";","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div className={`alert alert-primary alert-${props.alert.type}`} role=\"alert\" id=\"liveAlert\">\r\n          <strong>{props.alert.msg}</strong>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","// import './App.css';\n\nimport NavBar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\nimport mrBean from \"./mr-bean.gif\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport ColorPicker from \"./components/ColorPicker\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [color, setColor] = useState(\"white\");\n\n  const handleStyle = () => {\n    if (mode === \"light\") {\n      document.body.style.backgroundColor = \"grey\";\n      setMode(\"dark\");\n      showAlert(\"Dark mode enabled\", \"success\");\n      // document.title=\"TextUtils - Dark Mode\";\n    } else {\n      document.body.style.backgroundColor = \"white\";\n      setMode(\"light\");\n      showAlert(\"Light mode enabled\", \"success\");\n      // document.title=\"TextUtils - Light Mode\";\n    }\n  };\n\n  const applyColor = (colorName) => {\n    console.log(colorName);\n    setColor(colorName);\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n    //can return only one tag\n    // if multiple tags then use JSX fragment  => <> </>\n    <>\n      {/* <Router>\n        <NavBar title=\"TextUtils\" homeText=\"Home\" mode={mode} setMode={handleStyle} applyColor={applyColor} />\n        <Alert alert={alert} />\n\n        <Switch>\n          <Route exact path=\"/about\">\n            <div className=\"container\">\n              <About />\n            </div>\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"container\">\n              <TextForm heading=\"Enter text to evaluate\" mode={mode} showAlert={showAlert} color={color} />\n            </div>\n          </Route>\n        </Switch>\n        <div className=\"container-sm\">\n          <img className=\"img-thumbnail\" src={mrBean} alt=\"loading...\" width=\"20%\"></img>\n        </div>\n      </Router> */}\n\n      <NavBar title=\"TextUtils\" homeText=\"Home\" mode={mode} setMode={handleStyle} applyColor={applyColor} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextForm heading=\"Enter text to evaluate\" mode={mode} showAlert={showAlert} color={color} />\n      </div>\n      <div className=\"container-sm\">\n        <img className=\"img-thumbnail\" src={mrBean} alt=\"loading...\" width=\"20%\"></img>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}